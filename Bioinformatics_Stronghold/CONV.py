### Comparing spectra with the spectral convolution ###

def Convolution(s1,s2):
    conv = [round(i - j,5) for i in s1 for j in s2 if i - j > 0]

    result = []
    for mass in conv:
        if mass not in result:
            m = conv.count(mass)
            for i in range(m):
                result.append(mass)
    return result

spectrum1 = [float(num) for num in '57.02146 128.05858 343.18557 414.22268 485.25979 1187.50697 1300.59103 1428.68599 1572.73546 1629.75692 1742.84098 1969.0091 1987.94368 2066.06186 2198.0805 2427.18675 2528.23443 2566.31544 2629.28211 2798.40361 2914.41457 2926.49857 3070.51568 3217.6317 3233.57901 3332.64742 3403.71101 3550.77942 3607.80088 3616.77474 3721.84381 3835.88674 4139.10254 4150.04575 4393.16765 4558.28302 4636.25317 4749.33723 4820.37434 4889.40321 4946.42467 5036.44896 5093.49308 5137.49664 5164.53019 5235.5673 5266.53923 5465.65757 5681.73219 5814.78092 5865.85336 6014.86062 6085.89773 6352.06078 6559.12516 6672.20922 6780.26272 6885.33179 6894.30565 6951.32711 7098.39552 7268.52752 7421.53374 7644.71342 7759.74036 7872.82442 7973.8721 8121.8704 8161.95181 8307.94971 8514.16285 8642.25781 8872.34961 8929.37107 9570.65198 9624.7313 9698.74694 9723.79971 9801.75613 9826.8089 10016.84674 10097.93695 10358.05304 10445.08507'.split()]
spectrum2 = [float(num) for num in '184.12117 255.15828 342.19031 443.23799 803.39597 985.51924 1394.71939 1444.67688 1531.7783 1727.86646 1857.98493 1957.05334 2054.1061 2217.16943 2252.17755 2331.21236 2438.25686 2473.28658 2569.29735 2670.34503 2673.36628 2798.43999 2952.51421 3089.57312 3380.66113 3422.72084 3596.73575 3667.77286 3707.82816 3764.84962 3780.85692 3851.88165 3908.90311 4023.94244 4267.06434 4394.15166 4581.22335 4621.27865 4793.36344 4809.30921 5009.43806 5013.39908 5138.48065 5336.5373 5433.59006 5490.61152 5618.70648 5686.72234 5850.79465 5957.83915 6071.88208 6234.94541 6351.04823 6448.10099 6674.26911 6757.27321 7041.40053 7140.46894 7348.59663 7744.76584 7845.81352 8002.88741 8073.92452 8175.96745'.split()]
conv = Convolution(spectrum1,spectrum2)
FreqTable = {mass:conv.count(mass) for mass in conv}
max_m = max(list(FreqTable.values()))
print(max_m)
max_mass = [mass for mass in FreqTable if FreqTable[mass] == max_m][0]
print(max_mass)