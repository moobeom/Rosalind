### Implement Greedy Motif Search with pseudocounts ###
from BA2D import consensus,score
import itertools as it

def ImprovedGreedyMotifSearch(dna,k,t):
    first_string = dna[0]
    l = len(first_string)
    bestmotifs = [seq[0:k] for seq in dna]
    first_string_kmers = [first_string[i:i+k] for i in range(l-k+1)]

    for first_string_kmer in first_string_kmers:
        motif1 = first_string_kmer
        motifs = []
        motifs.append(motif1)
        for i in range(1,t):
            profile = makePseudoProfile(k,motifs[0:i])
            motifs.append(consensus(k,dna[i],profile))

        if score(motifs) > score(bestmotifs):
            bestmotifs = motifs
    return tuple(bestmotifs)

def makePseudoProfile(l,motifs):
    k = len(motifs)
    base_count = {}
    base_list = ['A','C','G','T']
    for base in base_list:                      # 염기별로 l-mer의 길이만큼 0생성 (initialization)
        base_count[base] = []
        for i in range(l):
            base_count[base].append(1)

    for i in range(k):
        for j in range(l):
            base = motifs[i][j]
            base_count[base][j] += 1 / k        # k-th string의 각 자리의 염기를 count 후 전체를 k만큼나눠서 확률로 나타냄

    return  base_count

k = 12
t = 25
seqList = ['GAAGCCAATGGTTATAGCGGTGGGTACAAATCATAGTTCGACTGACACACCGCCGTAGAGACCCTTGTCCGTCCCTGGATGTGGAAAGCGGGTCAAGGGCGTATGGGACGCAATTGGTTCGCTATGCAGTGACGTGTAATTATATCCGAGGAGCGG',
'TCGGCTACTTCGCTCTGGACGAGATGTTGGTCTCGCGCGCGGGCCCCCACCCACTGAGAAACACTACTTTCTACGCTGTCGGACTCAGTAATGATATGGGCAGCTTGTGGGTGTTAGGCGCTCAGGTTAGGGAACGAAGCGTATGTGGGGGACACT',
'CACGTCGAAAGTCGCCCGGAAATATGTCGGCTCCGAGTCGAGGAGCCCTTCCCGGCCTAGCTTAAAGGAATTTTTACGTCCACAGGTATTTTGGCATCCCAACGGTGGTAACGGATTGTAGCCGATTCCTTCCGACTAGATGGCCACTGGAAGAGC',
'ATGTGCCCGAGCGTGTATGCGCCGAAGAGTAAATCCTCACGTGGAACGTGCCACCATTCAAGGTAACAAATTCTAGTCGAGCTTTTAATACAAAATCTCTGGTCAGAGGCTTTAACAGACCGCTGGAGGGGCAGAGTTACGCGGTCTCTTAGCCCC',
'ATCGTCCTACATGAGAGGGGCGGTAGTACCTGGGACGGTCTGCTACTGCCGGTGAACAGTGGGATACTTAAGCACTGGAGGGGCTACAATTGCGGGTCGACATGTACTGGCTCGTCGCCCGTGCGACAAAGAGATCCGTTTAGCTGCTATTGGAAT',
'GTTTCATGTAAATTTGTCCTGATAGTCTCATCAACGTCTTTCATGAAGAAATCATAGTTGCCAGGTTACAACCTAAGGCGTTCGGTTAAGCTCGTGACGAGTTTGTTGGCCGTTAACCAGGCACATTATAAGCCCTGGATGCGACGCATAACTGGA',
'CGCTGGAGGCGATGGTTAACACACCGCCAAGGCAAGCGCTACGGAGTCGCTACACGCCGAGACAATGCCCTTGAAGTTCTTATGTGAAGTATGGTGGGATAGGGTCGTGCGAGATGACTATTTTACTGATTCGTGACGAGCGTAACTTCTTGTCTG',
'GCCAAATTTAGCTTGCCCTTTGTTGAAGACATCCCGATTGTGCATGCACACTGGACGAGCCGTGGTTGGTATGCTGTGTACTAAGGCTTCCGTCAAGATGCTGATGCTGCTTAGCTGAGTCTTGGGTTTGCGCCCACCTAGGGCTGGTGTTCGGCG',
'GCCTACGCGCCATACGCATGAACCTAGATGAGTACAGAGTAGAAAGTACCCCCGATATCCCGGCTCCGTCGATATTAATTATCTTTGTCCATTCGATCGCTGCCTTCACAAATGACAGGTTAACGTGGGCCGCAGCCATTCGTGCGCTGGATGAGT',
'ACGCGACAGCCTGGATCAGCACGGAAATCGAATTTTCCTGCGGGGTTGCCCTTGGAAATGCACTGGAAGAGGCAAATGACAGAGGGTCCGTCTTATTACCACGACAGCATCCTTCTGATCTGATAACGGTCTGTCTTGCAATGCCGTAGAATGCGG',
'GTATGTCTTACATGCAAGGTACAAGATCCATGACGGCGTTGCCTTATCACCGACTTTCGGATCAGCAGGGTTACTTCAAAACATTTTGAGGTTTCGGGTCCTGTAAACGTGTGGCTGACCCCTGGACGAGTAACGAAGTACCTATACAATGCTAG',
'GGGAGTATTATGTCCAGTGATTCTATCGCGCATAGTTTTATGAATGAGATGATTTGCGCACACTGGATGTGTGGTCGATCTTCCAGACGATTGTACCAGAGTCAAAGATGGAGCATTTAGTTCCCGCATTCTTATTATACGGTCGAGGAGACGTTC',
'ATTTAAGTACCACGCCTCAATGCCTAGCCGCCTGTGACAATACCGCACGGCCCACGAACCTCCTCGGAGCAGGAGGAAAAACACCTAGGAGCGGTATCGGCACGTCGGCTCTGGAGGAGGACGTGACCAAAGAAAAATGTTGGTCATCATACGCAT',
'AACATCGGGCTACACTGGATGTGCCTGTAGTGTATTATATACCTGTCCCACCACCGCAAGACATCGAGCCGCTTTTGCTTTTCCTCGAAGAAACAACTAACAGATCCTCAACATCGCACAAGCTAGTGAGCCGATCAGGAAGAGCTAAAAATTGAT',
'GCGCCACTCTCCCCCTCCGCTAAAAGACGATACTATTGAGTCAAAAGGCTCTGGATGGGCAAGCGACACGCCCTCGGCTCAACTGGTAGTGCAGTGCCGAAAAATACAGTTTGATTGGTAACTCACACTGCAGCACGAGAAGTTAACGCAATGACC',
'GTGTGGACGGTAGCACCAAGGTAAAGGTAGCTTCGTACGAAGCCCTTAAGCCACCTTACTTGACGAGTTTGAGAGGAAGGACTAACGGAAGTGGAAAGGTTACCCAATGCGGCGCGAGTCACATTAGGTGCAGAGGTAGAGAAACCCTGGACGAGT',
'CTCTGGAAGCGTAATTATACAGCGCTCGTCAAGTTATCAGTAAGATTACTTAATCCGTGCAAAGGCGTACTTTTTATTCGTGATCCGGACGTATGATGCGTTGATGGTTGCCTCGGCATGAGCGCGCATTTACCGTAGGGGGGCTCTAAGAGTTTT',
'ACAACGGTAAGTTGCTCCGAAGCTCCCTGGAGGGGATTGATTGAGCGTCTGCTTCTGGGTAGCGCGGCAATAGTGGCCTCTTACTCCGCGACTATCTCGTAGATCCATGAGCGCAACCAGTGACTGGGAAGCGTTGAGGTATGTGAATATCCACAT',
'CGCGTCATTAGACGCTGGATGGGACCAGGTAACCCGTGGAACAGGGTTTATTTATCAACTATTGACAAAAACAATCGCAGCCTCATCTATTATAGTGCTGCAGTCAGCCCACCTCAACGCTATGGCAGCGCCGGTAGTGTGCCTATCCCCGCCTTT',
'AGATCTTTCGACATTACTTTTCGGGCTCCGAGGCCCAACTGAAGGCGCACTGGCCGAGGCCGCTGGAGGGGGTTTGCGCACGGTTGGAGTTGCAGTGTTTGGAGGCTTTATTTGCTCTACCAAGACGGTGAACTTATTATACTTACGAGTTTACCA',
'CCCTGGAGGCGTACGAGTTTACTAAGCTAATGGGAACCACAGCATCCTCGGAGCGCTTAGGAAAACCCTTCCTGGGAACGGCCGCTTTCCGGCGAAGCTGAAACATTCCGGCGGTTGCAAACGCACCATTACAAAAGAGCATAAACTAGACACAGT',
'TACCGCTACAAGTGCTGCCACTTTACGAATTGATGTTGGTCTATTCTCCATCATGTAGCATCACGTGTAATACGCTGGACGGGTAGATAGCCGTCGCCGTTACAACGATAGAGGCGGACGACCAAGACTCCGATAACAAGTATTATGGCGTCAGAC',
'CACCATCCTAGATGATGTCGGGTTTATGGACCCCCACCGTGGGTGATCTATGGATATGGTTGCCGTTGCCTTAGTAGGTAGCTTAGCTGACCACCTGGCACAAGACGTGCTGGAGTCATATAGATTCGTTGTTTCCTATTAGGTCACTGGACGGGT',
'CTCCGGCTATATACAAACATGAGGCCCTGGACGTGTTGGGCATAACCGTGCCAGCCATGATGGTAAGCCCAATGACACGCGATTGGTTACCGCTACAAAGGAAACTAGGTGACTTCTGATCAAAGGACCCCTAGGGCTCGCTGTTCACAACACCCA',
'TTCGAGTATCTGTAATTAGGAGCCCAGGCATTGTACCACCGGGATTCCGACGTATATTCCAGATAGATATAACTAAGCTAGCAGTGCTTTAGGCAGGACGTCCCGCGACTCTGGAGGTGCCCAACAGAGAACGACTTATGAGCAACTTGGTGAATG'
]

print(ImprovedGreedyMotifSearch(seqList,k,t))